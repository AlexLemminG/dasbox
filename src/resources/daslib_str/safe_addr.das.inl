//
// AUTO-GENERATED FILE - DO NOT EDIT!!
//

"options indenting = 4\n"
"options no_unused_block_arguments = false\n"
"options no_unused_function_arguments = false\n"
"options no_aot = true\n"
"\n"
"module safe_addr shared private\n"
"\n"
"require ast\n"
"require rtti\n"
"require daslib/ast_boost\n"
"require daslib/is_local\n"
"\n"
"[tag_function(safe_addr_tag)]\n"
"def public safe_addr(var x : auto(T)& = const) : T-& ? #\n"
"    unsafe\n"
"        return reinterpret<T-&?#>(addr(x))\n"
"\n"
"\n"
"[tag_function(safe_addr_tag)]\n"
"def public safe_addr(x : auto(T)& = const) : T-& ? const #\n"
"    unsafe\n"
"        return reinterpret<T-&? const #>(addr(x))\n"
"\n"
"[tag_function_macro(tag=\"safe_addr_tag\")]\n"
"class SafeAddrMacro : AstFunctionAnnotation\n"
"    def override transform ( var call : smart_ptr<ExprCallFunc>; var errors : da"
"s_string ) : ExpressionPtr\n"
"        if !is_local_or_global_expr(ExpressionPtr(call.arguments[0]))\n"
"            compiling_program() |> macro_error(call.at,\"not a local value\")\n"
"        return [[ExpressionPtr]]\n"
