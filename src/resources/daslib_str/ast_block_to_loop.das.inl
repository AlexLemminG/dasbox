//
// AUTO-GENERATED FILE - DO NOT EDIT!!
//

"options indenting = 4\n"
"options no_unused_block_arguments = false\n"
"options no_unused_function_arguments = false\n"
"options no_aot = true\n"
"\n"
"module ast_block_to_loop shared public\n"
"\n"
"require daslib/ast_boost\n"
"\n"
"class B2LVisitor : AstVisitor\n"
"    inClosure:int\n"
"    failOnReturn : bool\n"
"    replaceReturnWithContinue : bool\n"
"    def B2LVisitor(fOnR,rRetWC:bool)\n"
"        failOnReturn = fOnR\n"
"        replaceReturnWithContinue = rRetWC\n"
"    def override preVisitExprBlock(blk:smart_ptr<ExprBlock>) : void\n"
"        if blk.blockFlags.isClosure\n"
"            inClosure ++\n"
"    def override visitExprBlock(blk:smart_ptr<ExprBlock>) : ExpressionPtr\n"
"        if blk.blockFlags.isClosure\n"
"            inClosure --\n"
"        return blk\n"
"    def override visitExprReturn(expr:smart_ptr<ExprReturn>) : ExpressionPtr\n"
"        if inClosure==0\n"
"            if failOnReturn\n"
"                macro_error(compiling_program(),expr.at,\"return is not allowed i"
"nside this macros's block\")\n"
"            elif replaceReturnWithContinue\n"
"                return <- new [[ExprContinue() at=expr.at]]\n"
"        return expr\n"
"    def override visitExprBreak(expr:smart_ptr<ExprBreak>) : ExpressionPtr\n"
"        macro_error(compiling_program(),expr.at,\"break is not allowed inside thi"
"s macros's block\")\n"
"        return expr\n"
"    def override visitExprContinue(expr:smart_ptr<ExprContinue>) : ExpressionPtr"
"\n"
"        macro_error(compiling_program(),expr.at,\"continue is not allowed inside "
"this macros's block\")\n"
"        return expr\n"
"\n"
"[macro_function]\n"
"def public convert_block_to_loop(var blk:smart_ptr<Expression>; failOnReturn,rep"
"laceReturnWithContinue:bool )\n"
"    var astVisitor = new B2LVisitor(failOnReturn,replaceReturnWithContinue)\n"
"    var astVisitorAdapter <- make_visitor(*astVisitor)\n"
"    visit(blk, astVisitorAdapter)\n"
"    astVisitorAdapter := null\n"
"    unsafe\n"
"        delete astVisitor\n"
